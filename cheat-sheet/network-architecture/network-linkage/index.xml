<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IT Architecture Cheat Sheet â€“ Network Linkage</title>
    <link>https://bradhuang9999.github.io/IT-Architecture-CheatSheet/cheat-sheet/network-architecture/network-linkage/</link>
    <description>Recent content in Network Linkage on IT Architecture Cheat Sheet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	  <atom:link href="https://bradhuang9999.github.io/IT-Architecture-CheatSheet/cheat-sheet/network-architecture/network-linkage/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Cheat Sheet: Leased line</title>
      <link>https://bradhuang9999.github.io/IT-Architecture-CheatSheet/cheat-sheet/network-architecture/network-linkage/leased-line/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bradhuang9999.github.io/IT-Architecture-CheatSheet/cheat-sheet/network-architecture/network-linkage/leased-line/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;Leased line is a type of WAN connection option. It is a dedicated network provided by an Internet Service Provider (ISP) with a fixed bandwidth, allowing for secure communication without going through the internet. Leased lines are used to connect different areas of data centers or subnets.&lt;/p&gt;
&lt;h3 id=&#34;use-cases&#34;&gt;Use Cases&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Securely connecting different subnets in separate areas.&lt;/li&gt;
&lt;li&gt;Securely connecting to services from cloud providers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;advantages&#34;&gt;Advantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Security: Leased lines establish secure communication between different internal networks without relying on the internet.&lt;/li&gt;
&lt;li&gt;Stable Speed: ISPs provide a fixed bandwidth based on the signed contract, ensuring consistent speed without sharing with others.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;disadvantages&#34;&gt;Disadvantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;High Cost: Leased lines provided by ISPs are billed based on the bandwidth, which is typically expensive.&lt;/li&gt;
&lt;li&gt;Single Point of Failure: There is a risk of failure in a single leased line network, so multiple leased lines are usually configured as backups.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Cheat Sheet: Proxy</title>
      <link>https://bradhuang9999.github.io/IT-Architecture-CheatSheet/cheat-sheet/network-architecture/network-linkage/proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bradhuang9999.github.io/IT-Architecture-CheatSheet/cheat-sheet/network-architecture/network-linkage/proxy/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;A Proxy (Proxy Server) is a server that acts as an intermediary between internal network devices and external networks.&lt;/p&gt;
&lt;h3 id=&#34;advantages&#34;&gt;Advantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Filtering of risky websites: It can be configured with a website blacklist to prevent internal users from accessing high-risk websites.&lt;/li&gt;
&lt;li&gt;Blocking of malicious data: It can check the returned content for any attack strings.&lt;/li&gt;
&lt;li&gt;Hiding of real IP: It prevents external attackers from directly calling internal devices.&lt;/li&gt;
&lt;li&gt;Caching of website data: It can cache recently accessed static content, reducing network traffic.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;disadvantages&#34;&gt;Disadvantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Single point of failure: If the proxy server fails, internal devices will be unable to access the external network.&lt;/li&gt;
&lt;li&gt;Impact on network speed: Since the proxy server is responsible for filtering and transforming packets, it may cause some degree of network latency.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Cheat Sheet: Reverse Proxy</title>
      <link>https://bradhuang9999.github.io/IT-Architecture-CheatSheet/cheat-sheet/network-architecture/network-linkage/reverse-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bradhuang9999.github.io/IT-Architecture-CheatSheet/cheat-sheet/network-architecture/network-linkage/reverse-proxy/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;A Reverse Proxy exists on the server side and is responsible for receiving client requests and forwarding them to backend servers.&lt;/p&gt;
&lt;h3 id=&#34;advantages&#34;&gt;Advantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Horizontal scalability: Since client requests are forwarded through the reverse proxy, multiple servers on the server side can simultaneously provide services, increasing availability.&lt;/li&gt;
&lt;li&gt;Load balancing: Requests can be balanced among the servers according to configuration, avoiding excessive traffic to specific servers.&lt;/li&gt;
&lt;li&gt;Error detection: If a specific server fails a certain number of times, it can be automatically stopped from receiving requests.&lt;/li&gt;
&lt;li&gt;URL redirection: Requests can be forwarded to the corresponding server and port based on the requested URL and port.&lt;/li&gt;
&lt;li&gt;Protection: It avoids exposing the real IP of the servers and blocks malicious packets, such as allowing requests based on whitelist and blacklist IP controls.&lt;/li&gt;
&lt;li&gt;Content caching: Recent response content can be cached to reduce the load on backend servers.&lt;/li&gt;
&lt;li&gt;Support for HTTPS: The reverse proxy can perform HTTPS encryption and authentication, relieving the backend servers from handling SSL.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;disadvantages&#34;&gt;Disadvantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Complex architecture: The involvement of a reverse proxy server in packet forwarding makes the routing path more complex.&lt;/li&gt;
&lt;li&gt;Single point of failure: Client requests are relayed through the reverse proxy, so if the reverse proxy server fails, the service may be interrupted. This can be mitigated by horizontal scaling or clustering.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Nginx&lt;/li&gt;
&lt;li&gt;Apache&lt;/li&gt;
&lt;li&gt;IIS&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
